I"<h2 id="5-longest-palindromic-substring">5. Longest Palindromic Substring</h2>
<p>Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.</p>

<p>Example:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre>Input: "babad"
Output: "bab"
Note: "aba" is also a valid answer.

Input: "cbbd"
Output: "bb"
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="solution-1"><em>Solution 1</em></h3>
<p><strong><em>Thinking</em></strong>:  Traverse all characters as “MIDDLE” or “LEFT &amp; RIGHT”</p>

<p>Time Complexity: $O(n^2)$</p>

<p>Space Complexity: $O(1)$</p>

<h3 id="accepted"><font color="green">Accepted</font></h3>
<p>Runtime: $&lt;69.44\%$</p>

<p>Memory Usage: $&lt;52.34\%$</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
</pre></td><td class="rouge-code"><pre><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">longestPalindrome</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">s</span><span class="p">:</span> <span class="nb">str</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">str</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">s</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
            <span class="k">return</span> <span class="bp">None</span>
        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span> <span class="ow">or</span> <span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
            <span class="k">return</span> <span class="n">s</span>
        
        <span class="n">result</span> <span class="o">=</span> <span class="s">''</span>
        <span class="n">pal_length</span> <span class="o">=</span> <span class="mi">0</span>
        
        <span class="c1"># s[i] as the middle
</span>        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="p">)):</span>
            <span class="n">mid_idx</span> <span class="o">=</span> <span class="n">i</span>
            <span class="n">left_idx</span> <span class="o">=</span> <span class="n">i</span> <span class="o">-</span> <span class="mi">1</span>
            <span class="n">right_idx</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span>
            <span class="n">pal_length</span> <span class="o">=</span> <span class="mi">1</span>
            <span class="k">while</span> <span class="n">left_idx</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="ow">and</span> <span class="n">right_idx</span> <span class="o">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
                <span class="k">if</span> <span class="n">s</span><span class="p">[</span><span class="n">left_idx</span><span class="p">]</span> <span class="o">==</span> <span class="n">s</span><span class="p">[</span><span class="n">right_idx</span><span class="p">]:</span>
                    <span class="n">pal_length</span> <span class="o">+=</span> <span class="mi">2</span>
                    <span class="n">left_idx</span> <span class="o">-=</span> <span class="mi">1</span>
                    <span class="n">right_idx</span> <span class="o">+=</span> <span class="mi">1</span>
                <span class="k">else</span><span class="p">:</span>
                    <span class="k">break</span>
            <span class="n">left_idx</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="n">right_idx</span> <span class="o">-=</span> <span class="mi">1</span>
                    
            <span class="k">if</span> <span class="n">pal_length</span> <span class="o">&gt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">result</span><span class="p">):</span>
                <span class="n">result</span> <span class="o">=</span> <span class="n">s</span><span class="p">[</span><span class="n">left_idx</span> <span class="p">:</span> <span class="n">right_idx</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span>
            
        <span class="c1"># s[i] is left, s[i+1] is right
</span>        <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="p">)):</span>
            <span class="n">left_idx</span> <span class="o">=</span> <span class="n">j</span>
            <span class="n">right_idx</span> <span class="o">=</span> <span class="n">j</span> <span class="o">+</span> <span class="mi">1</span>
            <span class="n">pal_length</span> <span class="o">=</span> <span class="mi">0</span>
            <span class="k">while</span> <span class="n">left_idx</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="ow">and</span> <span class="n">right_idx</span> <span class="o">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
                <span class="k">if</span> <span class="n">s</span><span class="p">[</span><span class="n">left_idx</span><span class="p">]</span> <span class="o">==</span> <span class="n">s</span><span class="p">[</span><span class="n">right_idx</span><span class="p">]:</span>
                    <span class="n">pal_length</span> <span class="o">+=</span> <span class="mi">2</span>
                    <span class="n">left_idx</span> <span class="o">-=</span> <span class="mi">1</span>
                    <span class="n">right_idx</span> <span class="o">+=</span> <span class="mi">1</span>
                <span class="k">else</span><span class="p">:</span>
                    <span class="k">break</span>
            <span class="n">left_idx</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="n">right_idx</span> <span class="o">-=</span> <span class="mi">1</span>
            <span class="k">if</span> <span class="n">pal_length</span> <span class="o">&gt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">result</span><span class="p">):</span>
                <span class="n">result</span> <span class="o">=</span> <span class="n">s</span><span class="p">[</span><span class="n">left_idx</span><span class="p">:</span> <span class="n">right_idx</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span>
                <span class="c1"># print("(2)", i, result)
</span>                
        <span class="k">return</span> <span class="n">result</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h3 id="notes">Notes:</h3>
<ol>
  <li>Be carefull about the index, especially when the “if s[left] == s[right]”, and “while left/right border”, once breaks the rule, remember to left ++, and right –</li>
  <li>Remember to result substring, instead of length</li>
</ol>
:ET